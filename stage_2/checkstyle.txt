Starting audit...
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/Main.java:4:20: Using the '.*' form of import should be avoided - fileio.input.*. [AvoidStarImport]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/fileio/input/ProducerInputData.java:12:5: Class 'ProducerInputData' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerInputData' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/fileio/input/ProducerInputData.java:16:5: Class 'ProducerInputData' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerInputData' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/fileio/input/ProducerInputData.java:20:5: Class 'ProducerInputData' looks like designed for extension (can be subclassed), but the method 'getEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerInputData' final or making the method 'getEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/fileio/input/ProducerInputData.java:24:5: Class 'ProducerInputData' looks like designed for extension (can be subclassed), but the method 'setEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerInputData' final or making the method 'setEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/fileio/input/ProducerInputData.java:28:5: Class 'ProducerInputData' looks like designed for extension (can be subclassed), but the method 'getMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerInputData' final or making the method 'getMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/fileio/input/ProducerInputData.java:32:5: Class 'ProducerInputData' looks like designed for extension (can be subclassed), but the method 'setMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerInputData' final or making the method 'setMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/fileio/input/ProducerInputData.java:36:5: Class 'ProducerInputData' looks like designed for extension (can be subclassed), but the method 'getPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerInputData' final or making the method 'getPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/fileio/input/ProducerInputData.java:40:5: Class 'ProducerInputData' looks like designed for extension (can be subclassed), but the method 'setPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerInputData' final or making the method 'setPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/fileio/input/ProducerInputData.java:44:5: Class 'ProducerInputData' looks like designed for extension (can be subclassed), but the method 'getEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerInputData' final or making the method 'getEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/fileio/input/ProducerInputData.java:48:5: Class 'ProducerInputData' looks like designed for extension (can be subclassed), but the method 'setEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerInputData' final or making the method 'setEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/fileio/input/ProducerChangesInputData.java:7:5: Class 'ProducerChangesInputData' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerChangesInputData' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/fileio/input/ProducerChangesInputData.java:11:5: Class 'ProducerChangesInputData' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerChangesInputData' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/fileio/input/ProducerChangesInputData.java:15:5: Class 'ProducerChangesInputData' looks like designed for extension (can be subclassed), but the method 'getEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerChangesInputData' final or making the method 'getEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/fileio/input/ProducerChangesInputData.java:19:5: Class 'ProducerChangesInputData' looks like designed for extension (can be subclassed), but the method 'setEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerChangesInputData' final or making the method 'setEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/PriceStrategy.java:13:5: Class 'PriceStrategy' looks like designed for extension (can be subclassed), but the method 'sortProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PriceStrategy' final or making the method 'sortProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/StrategyFactory.java:8:1: Class StrategyFactory should be declared as final. [FinalClass]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/StrategyFactory.java:11:31: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/StrategyFactory.java:11:32: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/StrategyFactory.java:13:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/StrategyFactory.java:20: Line is longer than 100 characters (found 126). [LineLength]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/StrategyFactory.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/EnergyChoiceStrategyType.java:10:25: Variable 'label' must be private and have accessor methods. [VisibilityModifier]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/QuantityStrategy.java:13:5: Class 'QuantityStrategy' looks like designed for extension (can be subclassed), but the method 'sortProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'QuantityStrategy' final or making the method 'sortProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/GreenStrategy.java:13:5: Class 'GreenStrategy' looks like designed for extension (can be subclassed), but the method 'sortProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GreenStrategy' final or making the method 'sortProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/GreenStrategy.java:17: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/Strategy.java:20:5: Class 'Strategy' looks like designed for extension (can be subclassed), but the method 'chooseProducers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Strategy' final or making the method 'chooseProducers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/Strategy.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/Strategy.java:26: Line is longer than 100 characters (found 131). [LineLength]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/strategies/Strategy.java:28: Line is longer than 100 characters (found 154). [LineLength]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Consumer.java:64:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Consumer.java:68:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Consumer.java:80: Line is longer than 100 characters (found 132). [LineLength]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Consumer.java:97: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Consumer.java:117:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Consumer.java:143:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:16: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:23:5: Class 'ProductionContract' looks like designed for extension (can be subclassed), but the method 'getProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProductionContract' final or making the method 'getProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:27:5: Class 'ProductionContract' looks like designed for extension (can be subclassed), but the method 'setProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProductionContract' final or making the method 'setProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:31:5: Class 'ProductionContract' looks like designed for extension (can be subclassed), but the method 'getDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProductionContract' final or making the method 'getDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:35:5: Class 'ProductionContract' looks like designed for extension (can be subclassed), but the method 'setDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProductionContract' final or making the method 'setDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:39:5: Class 'ProductionContract' looks like designed for extension (can be subclassed), but the method 'getPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProductionContract' final or making the method 'getPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:43:5: Class 'ProductionContract' looks like designed for extension (can be subclassed), but the method 'setPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProductionContract' final or making the method 'setPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:47:5: Class 'ProductionContract' looks like designed for extension (can be subclassed), but the method 'getDistributedEnergy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProductionContract' final or making the method 'getDistributedEnergy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:51:5: Class 'ProductionContract' looks like designed for extension (can be subclassed), but the method 'setDistributedEnergy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProductionContract' final or making the method 'setDistributedEnergy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:55:5: Class 'ProductionContract' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProductionContract' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:59:5: Class 'ProductionContract' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProductionContract' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:63:5: Class 'ProductionContract' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProductionContract' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:65:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:66:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:71:5: Class 'ProductionContract' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProductionContract' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:76:5: Class 'ProductionContract' looks like designed for extension (can be subclassed), but the method 'computeCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProductionContract' final or making the method 'computeCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/ProductionContract.java:76:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/contracts/DistributionContract.java:74: Line is longer than 100 characters (found 118). [LineLength]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:32:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:36:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:40:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:44:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:48:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:52:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:56:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:60:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:64:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:68:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:68:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:73:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getProductionContracts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getProductionContracts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:77:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setProductionContracts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setProductionContracts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:81:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:83:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:84:9: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:89:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:94:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:103:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getNumberOfContracts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getNumberOfContracts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:107:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'addContract' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'addContract' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:107:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:111:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'removeContracts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'removeContracts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:111:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:115:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'register' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'register' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:120:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'unregisterAll' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'unregisterAll' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Producer.java:125:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'notifyObservers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'notifyObservers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/DistributorObserver.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Distributor.java:203: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Distributor.java:229:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Distributor.java:237:61: '10' is a magic number. [MagicNumber]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Distributor.java:240:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/Distributor.java:244:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/ProducerObservable.java:6:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/ProducerObservable.java:7:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/entities/ProducerObservable.java:8:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/Simulation.java:5:20: Using the '.*' form of import should be avoided - fileio.input.*. [AvoidStarImport]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/Simulation.java:49:42: '{' at column 42 should have line break after. [LeftCurly]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/Simulation.java:106: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/horia/facultate/an II/sem 1/poo/teme/EnergySystem/stage_2/./src/Simulation.java:120: Line is longer than 100 characters (found 101). [LineLength]
Audit done.
Checkstyle ends with 93 errors.
